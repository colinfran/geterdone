{"version":3,"sources":["main.js"],"names":["openAboutWindow","require","tray","undefined","mainWindow","app","on","createTray","createWindow","Tray","path","join","__dirname","setIgnoreDoubleClickEvents","event","contextMenu","Menu","buildFromTemplate","label","click","description","icon_path","copyright","package_json_dir","bug_report_url","show_close_button","quit","popUpContextMenu","toggleWindow","getWindowPosition","windowBounds","getBounds","trayBounds","x","Math","round","width","y","height","BrowserWindow","show","frame","fullscreenable","resizable","transparent","webPreferences","backgroundThrottling","nodeIntegration","loadURL","url","format","pathname","protocol","slashes","isDevelopment","webContents","openDevTools","isDevToolsOpened","hide","isVisible","showWindow","position","setPosition","ipcMain"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;AAGA;AACA,IAAMA,eAAe,GAAGC,OAAO,CAAC,cAAD,CAAP,WAAxB;;AAIA,IAAIC,IAAI,GAAGC,SAAX;AACA,IAAIC,UAAU,GAAGD,SAAjB,C,CAEA;AACA;;AAGAE,cAAIC,EAAJ,CAAO,OAAP,EAAgB,YAAM;AACpBC,EAAAA,UAAU;AACVC,EAAAA,YAAY;AACb,CAHD;;AAKA,IAAMD,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBL,EAAAA,IAAI,GAAG,IAAIO,cAAJ,CAASC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,iBAArB,CAAT,CAAP;AACAV,EAAAA,IAAI,CAACW,0BAAL,CAAgC,IAAhC;AACAX,EAAAA,IAAI,CAACI,EAAL,CAAQ,aAAR,EAAuB,UAAUQ,KAAV,EAAiB;AACtC,QAAMC,WAAW,GAAGC,eAAKC,iBAAL,CAAuB,CACzC;AACEC,MAAAA,KAAK,EAAE,gBADT;AAEEC,MAAAA,KAAK,EAAE;AAAA,eAAMnB,eAAe,CAAC;AAC3BoB,UAAAA,WAAW,EAAE,OADc;AAE3BC,UAAAA,SAAS,EAAGX,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAFe;AAG3BU,UAAAA,SAAS,EAAE,uCAHgB;AAI3BC,UAAAA,gBAAgB,EAAE,IAJS;AAK3BC,UAAAA,cAAc,EAAE,+CALW;AAM3BC,UAAAA,iBAAiB,EAAE;AANQ,SAAD,CAArB;AAAA;AAFT,KADyC,EAYzC;AAAEP,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,KAAK,EAAE,iBAAM;AAAEd,sBAAIqB,IAAJ;AAAa;AAA7C,KAZyC,CAAvB,CAApB;;AAcAxB,IAAAA,IAAI,CAACyB,gBAAL,CAAsBZ,WAAtB;AACD,GAhBD;AAkBAb,EAAAA,IAAI,CAACI,EAAL,CAAQ,OAAR,EAAiB,UAAUQ,KAAV,EAAiB;AAChCc,IAAAA,YAAY;AACb,GAFD;AAID,CAzBD;;AA2BA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,MAAMC,YAAY,GAAG1B,UAAU,CAAC2B,SAAX,EAArB;AACA,MAAMC,UAAU,GAAG9B,IAAI,CAAC6B,SAAL,EAAnB,CAF8B,CAI9B;;AACA,MAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACC,CAAX,GAAgBD,UAAU,CAACI,KAAX,GAAmB,CAAnC,GAAyCN,YAAY,CAACM,KAAb,GAAqB,CAAzE,CAAV,CAL8B,CAO9B;;AACA,MAAMC,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWH,UAAU,CAACK,CAAX,GAAeL,UAAU,CAACM,MAA1B,GAAmC,CAA9C,CAAV;AAEA,SAAO;AAACL,IAAAA,CAAC,EAAEA,CAAJ;AAAOI,IAAAA,CAAC,EAAEA;AAAV,GAAP;AACD,CAXD;;AAaA,IAAM7B,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBJ,EAAAA,UAAU,GAAG,IAAImC,uBAAJ,CAAkB;AAC7BH,IAAAA,KAAK,EAAE,GADsB;AAE5BE,IAAAA,MAAM,EAAE,GAFoB;AAG7BE,IAAAA,IAAI,EAAE,KAHuB;AAI7BC,IAAAA,KAAK,EAAE,KAJsB;AAK7BC,IAAAA,cAAc,EAAE,KALa;AAM7BC,IAAAA,SAAS,EAAE,KANkB;AAO7BC,IAAAA,WAAW,EAAE,KAPgB;AAQ7BC,IAAAA,cAAc,EAAE;AACdC,MAAAA,oBAAoB,EAAE,KADR;AAEdC,MAAAA,eAAe,EAAE;AAFH;AARa,GAAlB,CAAb;AAaA3C,EAAAA,UAAU,CAAC4C,OAAX,CAAmBC,gBAAIC,MAAJ,CAAW;AAC5BC,IAAAA,QAAQ,EAAEzC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,YAArB,CADkB;AAE5BwC,IAAAA,QAAQ,EAAE,OAFkB;AAG5BC,IAAAA,OAAO,EAAE;AAHmB,GAAX,CAAnB;;AAMA,MAAIC,yBAAJ,EAAmB;AACflD,IAAAA,UAAU,CAACmD,WAAX,CAAuBC,YAAvB;AACH,GAtBwB,CAwBzB;;;AACApD,EAAAA,UAAU,CAACE,EAAX,CAAc,MAAd,EAAsB,YAAM;AAC1B,QAAI,CAACF,UAAU,CAACmD,WAAX,CAAuBE,gBAAvB,EAAL,EAAgD;AAC9CrD,MAAAA,UAAU,CAACsD,IAAX;AACD;AACF,GAJD;AAKD,CA9BD;;AAgCA,IAAM9B,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBxB,EAAAA,UAAU,CAACuD,SAAX,KAAyBvD,UAAU,CAACsD,IAAX,EAAzB,GAA6CE,UAAU,EAAvD;AACD,CAFD;;AAIA,IAAMA,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAMC,QAAQ,GAAGhC,iBAAiB,EAAlC;AACAzB,EAAAA,UAAU,CAAC0D,WAAX,CAAuBD,QAAQ,CAAC5B,CAAhC,EAAmC4B,QAAQ,CAACxB,CAA5C,EAA+C,KAA/C;AACAjC,EAAAA,UAAU,CAACoC,IAAX;AACD,CAJD;;AAMAuB,kBAAQzD,EAAR,CAAW,aAAX,EAA0B,YAAM;AAC9BsD,EAAAA,UAAU;AACX,CAFD","sourcesContent":["import {app, BrowserWindow, ipcMain, Tray, Menu} from 'electron';\nimport path from 'path';\nimport url from 'url';\nimport isDevelopment from 'electron-is-dev';\n\n\n// Replace '..' with 'about-window'\nconst openAboutWindow = require('about-window').default;\n\n\n\nlet tray = undefined\nlet mainWindow = undefined\n\n// Don't show the app in the doc\n// app.dock.hide()\n\n\napp.on('ready', () => {\n  createTray()\n  createWindow()\n})\n\nconst createTray = () => {\n  tray = new Tray(path.join(__dirname, 'assets/logo.png'))\n  tray.setIgnoreDoubleClickEvents(true);\n  tray.on('right-click', function (event) {\n    const contextMenu = Menu.buildFromTemplate([\n      {\n        label: 'About This App',\n        click: () => openAboutWindow({\n          description: \"About\",\n          icon_path:  path.join(__dirname, 'assets/image-black.png'),\n          copyright: 'Copyright (c) 2019 Colin Franceschini',\n          package_json_dir: \"..\",\n          bug_report_url: \"https://github.com/colinfran/geterdone/issues\",\n          show_close_button: \"Close\"\n        }),\n      },\n      { label: 'Quit', click: () => { app.quit(); } },\n    ]);\n    tray.popUpContextMenu(contextMenu);\n  });\n\n  tray.on('click', function (event) {\n    toggleWindow()\n  });\n\n}\n\nconst getWindowPosition = () => {\n  const windowBounds = mainWindow.getBounds();\n  const trayBounds = tray.getBounds();\n\n  // Center window horizontally below the tray icon\n  const x = Math.round(trayBounds.x + (trayBounds.width / 2) - (windowBounds.width / 2));\n\n  // Position window 4 pixels vertically below the tray icon\n  const y = Math.round(trayBounds.y + trayBounds.height + 4);\n\n  return {x: x, y: y};\n}\n\nconst createWindow = () => {\n  mainWindow = new BrowserWindow({\n    width: 400,\n     height: 400,\n    show: false,\n    frame: false,\n    fullscreenable: false,\n    resizable: false,\n    transparent: false,\n    webPreferences: {\n      backgroundThrottling: false,\n      nodeIntegration: true\n    }\n  })\n  mainWindow.loadURL(url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n  }));\n\n  if (isDevelopment) {\n      mainWindow.webContents.openDevTools();\n  }\n\n  // Hide the window when it loses focus\n  mainWindow.on('blur', () => {\n    if (!mainWindow.webContents.isDevToolsOpened()) {\n      mainWindow.hide()\n    }\n  })\n}\n\nconst toggleWindow = () => {\n  mainWindow.isVisible() ? mainWindow.hide() : showWindow();\n}\n\nconst showWindow = () => {\n  const position = getWindowPosition();\n  mainWindow.setPosition(position.x, position.y, false);\n  mainWindow.show();\n}\n\nipcMain.on('show-window', () => {\n  showWindow()\n})\n"],"file":"main.js"}