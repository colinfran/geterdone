{"version":3,"sources":["main.js"],"names":["require","__dirname","tray","undefined","mainWindow","app","dock","hide","on","createTray","createWindow","Tray","path","join","setIgnoreDoubleClickEvents","event","toggleWindow","getWindowPosition","windowBounds","getBounds","trayBounds","x","Math","round","width","y","height","BrowserWindow","show","frame","fullscreenable","resizable","transparent","webPreferences","backgroundThrottling","nodeIntegration","loadURL","url","format","pathname","protocol","slashes","webContents","isDevToolsOpened","isVisible","showWindow","position","setPosition","ipcMain"],"mappings":"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","sourcesContent":["import {app, BrowserWindow, ipcMain, Tray} from 'electron';\nimport path from 'path';\nimport url from 'url';\nimport isDevelopment from 'electron-is-dev';\nrequire('electron-reload')(__dirname);\nimport setCron from './cron.js';\n\n\n\nlet tray = undefined\nlet mainWindow = undefined\n\n// Don't show the app in the doc\napp.dock.hide()\n\n\napp.on('ready', () => {\n  createTray()\n  createWindow()\n})\n\nconst createTray = () => {\n  tray = new Tray(path.join('./assets/logo.png'))\n  tray.setIgnoreDoubleClickEvents(true);\n  tray.on('click', function (event) {\n    toggleWindow()\n  });\n}\n\nconst getWindowPosition = () => {\n  const windowBounds = mainWindow.getBounds();\n  const trayBounds = tray.getBounds();\n\n  // Center window horizontally below the tray icon\n  const x = Math.round(trayBounds.x + (trayBounds.width / 2) - (windowBounds.width / 2));\n\n  // Position window 4 pixels vertically below the tray icon\n  const y = Math.round(trayBounds.y + trayBounds.height + 4);\n\n  return {x: x, y: y};\n}\n\nconst createWindow = () => {\n  mainWindow = new BrowserWindow({\n    width: 400,\n     height: 300,\n    show: false,\n    frame: false,\n    fullscreenable: false,\n    resizable: false,\n    transparent: false,\n    webPreferences: {\n      backgroundThrottling: false,\n      nodeIntegration: true\n    }\n  })\n  mainWindow.loadURL(url.format({\n    pathname: path.join(__dirname, 'index.html'),\n    protocol: 'file:',\n    slashes: true\n  }));\n\n  // if (isDevelopment) {\n  //     mainWindow.webContents.openDevTools();\n  // }\n\n  // Hide the window when it loses focus\n  mainWindow.on('blur', () => {\n    if (!mainWindow.webContents.isDevToolsOpened()) {\n      mainWindow.hide()\n    }\n  })\n}\n\nconst toggleWindow = () => {\n  mainWindow.isVisible() ? mainWindow.hide() : showWindow();\n}\n\nconst showWindow = () => {\n  const position = getWindowPosition();\n  mainWindow.setPosition(position.x, position.y, false);\n  mainWindow.show();\n}\n\nipcMain.on('show-window', () => {\n  showWindow()\n})\n"],"file":"main.js"}